apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes: [ReadWriteOnce]
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-init-script
data:
  init.sql: |
    CREATE TABLE IF NOT EXISTS items (
      id SERIAL PRIMARY KEY,
      name TEXT NOT NULL
    );

    CREATE TABLE IF NOT EXISTS football_clubs (
      id SERIAL PRIMARY KEY,
      name TEXT NOT NULL,
      country TEXT NOT NULL
    );

    INSERT INTO items (name) VALUES
      ('alpha'), ('beta'), ('gamma');

    INSERT INTO football_clubs (name, country) VALUES
      ('Manchester United', 'England'),
      ('Real Madrid', 'Spain'),
      ('Barcelona', 'Spain');
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
type: Opaque
stringData:
  POSTGRES_DB: demo
  POSTGRES_USER: demo_user
  POSTGRES_PASSWORD: demo_pass
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          ports:
            - containerPort: 5432
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          envFrom:
            - secretRef:
                name: postgres-secret
          volumeMounts:
            - name: db-storage
              mountPath: /var/lib/postgresql/data
            - name: db-init
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: db-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: db-init
          configMap:
            name: db-init-script
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
